plugins {
    id 'java-library'
    id 'maven-publish'
    id 'checkstyle'
    id 'com.diffplug.spotless' version '6.25.0'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url = uri("${System.getProperty('user.home')}/.m2/repository")
        }
    }
}

checkstyle {
    toolVersion = '10.13.0'
}

configurations.checkstyle {
    resolutionStrategy.capabilitiesResolution.withCapability("com.google.collections:google-collections") {
        select("com.google.guava:guava:0")
    }
}

spotless {
    java {
        importOrder()
        removeUnusedImports()
        googleJavaFormat()
        formatAnnotations()
    }
}

group = 'net.barrage.tegridy'
version = '0.1.0'

java {
    withJavadocJar()
    withSourcesJar()
    sourceCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework:spring-core:6.1.3'
    implementation 'org.springframework:spring-web:6.1.3'
    implementation 'jakarta.validation:jakarta.validation-api:3.1.0-M1'
    implementation 'org.glassfish.expressly:expressly:5.0.0'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
    implementation group: 'com.google.auto.service', name: 'auto-service', version: '1.1.1'
    annotationProcessor group: 'com.google.auto.service', name: 'auto-service', version: '1.1.1'
    testImplementation 'com.google.testing.compile:compile-testing:0.21.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
}

test {
    useJUnitPlatform()
}

tasks.test {
    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'
}

publishing {
    publications {
        barrageNexus(MavenPublication) {
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Tegridy'
                description = 'Maintain data integrity'
            }
            groupId = 'net.barrage'
            artifactId = 'tegridy'
            version = '0.1.0'
            from components.java
        }
    }
    repositories {
        maven {
            credentials {
                username = nexusUsername
                password = nexusPassword
            }
            url = nexusUrl
        }
    }
}

